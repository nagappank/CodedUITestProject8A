// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUI_RMV_CSV_Data_ALL
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MessageBox = System.Windows.Forms.MessageBox;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertSearchResult - Use 'AssertSearchResultExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertSearchResult(string city_assert_name)
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UIRMVDESucheWindowsIntWindow.UIRMVDESucheDocument1.UISearchPane.UIItemCustom;
            #endregion

            try
            {
                // Verify that the 'InnerText' property of custom control contains 'Berlin'
                StringAssert.Contains(uIItemCustom.InnerText, city_assert_name, "Assertion Failed");
            }

            catch (AssertFailedException ex)
            {
                Console.WriteLine("Assert failed Nag, continuing the run");
            }

            DateTime Tstamp = DateTime.Now;
            String TstampStr = Tstamp.ToString().Replace(".", "").Replace(":", "").Replace(" ", "");
            //TstampStr = TstampStr.Replace(".", "");
            //TstampStr = TstampStr.Replace(":", "");
            //TstampStr = TstampStr.Replace(" ", "");
            

            Image pic = UITestControl.Desktop.CaptureImage();
            pic.Save(@"D:\Test\file" + city_assert_name + TstampStr + ".jpg", System.Drawing.Imaging.ImageFormat.Jpeg);
            
            //String inner_text = uIItemCustom.InnerText;
            MessageBox.Show(uIItemCustom.InnerText);

            if(uIItemCustom.InnerText.Contains("keine Ergebnisse"))
            {
                MessageBox.Show("The assertion failed, Check Email");
                /* REmove this in pulic Network
                try { 
                System.Net.Mail.MailMessage message = new System.Net.Mail.MailMessage();
                message.To.Add("nagappan.krishnan@cgi.com");
                message.Subject = "Assertion Failed";
                message.From = new System.Net.Mail.MailAddress("krishnan.nagappan@gmail.com");
                message.Body = "Assertion Failed";
                string sendEmailsFrom = "krishnan.nagappan@gmail.com";
                string sendEmailsFromPassword = "davis)987";
                System.Net.Mail.SmtpClient smtp = new System.Net.Mail.SmtpClient("smtp.gmail.com", 587);
                smtp.EnableSsl = true;
                smtp.DeliveryMethod = System.Net.Mail.SmtpDeliveryMethod.Network;
                smtp.Credentials = new System.Net.NetworkCredential(sendEmailsFrom, sendEmailsFromPassword);
                smtp.Timeout = 20000;
                smtp.Send(message);
                    }
                catch(Exception ex)
                { MessageBox.Show(ex.ToString()); }*/
            }
            



            
        }
        
        /// <summary>
        /// Launch_RMV - Use 'Launch_RMVParams' to pass parameters into this method.
        /// </summary>
        public void Launch_RMV()
        {

            // Go to web page 'http://www.rmv.de/' using new browser instance
            this.UIBlankPageWindowsInteWindow.LaunchUrl(new System.Uri(this.Launch_RMVParams.UIBlankPageWindowsInteWindowUrl));
        }
        
        /// <summary>
        /// LoginRMV - Use 'LoginRMVParams' to pass parameters into this method.
        /// </summary>
        public void LoginRMV()
        {
            #region Variable Declarations
            HtmlEdit uIEMailNutzernameEdit = this.UIBlankPageWindowsInteWindow.UIRMVDEStartseiteDocument.UIEMailNutzernameEdit;
            HtmlEdit uIPasswortEdit = this.UIBlankPageWindowsInteWindow.UIRMVDEStartseiteDocument.UIPasswortEdit;
            HtmlButton uILoginButton = this.UIBlankPageWindowsInteWindow.UIRMVDEStartseiteDocument.UIMyrmvloginPane.UILoginButton;
            #endregion

            // Type 'krishnan.nagappan@gmail.com' in 'E-Mail/Nutzername' text box
            uIEMailNutzernameEdit.Text = this.LoginRMVParams.UIEMailNutzernameEditText;

            // Type '********' in 'Passwort' text box
            uIPasswortEdit.Password = this.LoginRMVParams.UIPasswortEditPassword;

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(9, 3));
        }
        
        /// <summary>
        /// LogoutAndCloseBrowser
        /// </summary>
        public void LogoutAndCloseBrowser()
        {
            #region Variable Declarations
            HtmlHyperlink uILogoutHyperlink = this.UIRMVDESucheWindowsIntWindow.UIRMVDESucheDocument1.UIMyrmvPane.UILogoutHyperlink;
            WinButton uICloseButton = this.UIRMVDESucheWindowsIntWindow1.UIRMVDEStartseiteWindoTitleBar.UICloseButton;
            #endregion

            // Click 'Logout' link
            Mouse.Click(uILogoutHyperlink, new Point(36, 11));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(14, 10));
        }
        
        /// <summary>
        /// SearchCity2 - Use 'SearchCity2Params' to pass parameters into this method.
        /// </summary>
        public void SearchCity2(string city)
        {
            #region Variable Declarations
            HtmlEdit uISuchenachEdit = this.UIRMVDEmeinRMVWindowsIWindow.UIRMVDEmeinRMVDocument.UISuchenachEdit;
            HtmlButton uISuchenButton = this.UIRMVDEmeinRMVWindowsIWindow.UIRMVDEmeinRMVDocument.UIHeaderPane.UISuchenButton;
            #endregion

            // Type 'Berlin' in 'Suche nach' text box
            //uISuchenachEdit.Text = this.SearchCity2Params.UISuchenachEditText;
            uISuchenachEdit.Text = city;
            // Click 'Suchen' button
            Mouse.Click(uISuchenButton, new Point(53, 10));
            
            
        }
        
        #region Properties
        public virtual AssertSearchResultExpectedValues AssertSearchResultExpectedValues
        {
            get
            {
                if ((this.mAssertSearchResultExpectedValues == null))
                {
                    this.mAssertSearchResultExpectedValues = new AssertSearchResultExpectedValues();
                }
                return this.mAssertSearchResultExpectedValues;
            }
        }
        
        public virtual Launch_RMVParams Launch_RMVParams
        {
            get
            {
                if ((this.mLaunch_RMVParams == null))
                {
                    this.mLaunch_RMVParams = new Launch_RMVParams();
                }
                return this.mLaunch_RMVParams;
            }
        }
        
        public virtual LoginRMVParams LoginRMVParams
        {
            get
            {
                if ((this.mLoginRMVParams == null))
                {
                    this.mLoginRMVParams = new LoginRMVParams();
                }
                return this.mLoginRMVParams;
            }
        }
        
        public virtual SearchCity2Params SearchCity2Params
        {
            get
            {
                if ((this.mSearchCity2Params == null))
                {
                    this.mSearchCity2Params = new SearchCity2Params();
                }
                return this.mSearchCity2Params;
            }
        }
        
        public UIBlankPageWindowsInteWindow UIBlankPageWindowsInteWindow
        {
            get
            {
                if ((this.mUIBlankPageWindowsInteWindow == null))
                {
                    this.mUIBlankPageWindowsInteWindow = new UIBlankPageWindowsInteWindow();
                }
                return this.mUIBlankPageWindowsInteWindow;
            }
        }
        
        public UIRMVDESucheWindowsIntWindow UIRMVDESucheWindowsIntWindow
        {
            get
            {
                if ((this.mUIRMVDESucheWindowsIntWindow == null))
                {
                    this.mUIRMVDESucheWindowsIntWindow = new UIRMVDESucheWindowsIntWindow();
                }
                return this.mUIRMVDESucheWindowsIntWindow;
            }
        }
        
        public UIRMVDESucheWindowsIntWindow1 UIRMVDESucheWindowsIntWindow1
        {
            get
            {
                if ((this.mUIRMVDESucheWindowsIntWindow1 == null))
                {
                    this.mUIRMVDESucheWindowsIntWindow1 = new UIRMVDESucheWindowsIntWindow1();
                }
                return this.mUIRMVDESucheWindowsIntWindow1;
            }
        }
        
        public UIRMVDEmeinRMVWindowsIWindow UIRMVDEmeinRMVWindowsIWindow
        {
            get
            {
                if ((this.mUIRMVDEmeinRMVWindowsIWindow == null))
                {
                    this.mUIRMVDEmeinRMVWindowsIWindow = new UIRMVDEmeinRMVWindowsIWindow();
                }
                return this.mUIRMVDEmeinRMVWindowsIWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertSearchResultExpectedValues mAssertSearchResultExpectedValues;
        
        private Launch_RMVParams mLaunch_RMVParams;
        
        private LoginRMVParams mLoginRMVParams;
        
        private SearchCity2Params mSearchCity2Params;
        
        private UIBlankPageWindowsInteWindow mUIBlankPageWindowsInteWindow;
        
        private UIRMVDESucheWindowsIntWindow mUIRMVDESucheWindowsIntWindow;
        
        private UIRMVDESucheWindowsIntWindow1 mUIRMVDESucheWindowsIntWindow1;
        
        private UIRMVDEmeinRMVWindowsIWindow mUIRMVDEmeinRMVWindowsIWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSearchResult'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class AssertSearchResultExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of custom control contains 'Berlin'
        /// </summary>
        public string UIItemCustomInnerText = "Berlin";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Launch_RMV'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class Launch_RMVParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://www.rmv.de/' using new browser instance
        /// </summary>
        public string UIBlankPageWindowsInteWindowUrl = "http://www.rmv.de/";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginRMV'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class LoginRMVParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'krishnan.nagappan@gmail.com' in 'E-Mail/Nutzername' text box
        /// </summary>
        public string UIEMailNutzernameEditText = "krishnan.nagappan@gmail.com";
        
        /// <summary>
        /// Type '********' in 'Passwort' text box
        /// </summary>
        public string UIPasswortEditPassword = "yu4n530nz7C8if08wtUH39XqbJN2Q0RU";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchCity2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class SearchCity2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'Berlin' in 'Suche nach' text box
        /// </summary>
        public string UISuchenachEditText = "Berlin";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIBlankPageWindowsInteWindow : BrowserWindow
    {
        
        public UIBlankPageWindowsInteWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Blank Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Blank Page");
            this.WindowTitles.Add("RMV.DE - Startseite");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIRMVDEStartseiteDocument UIRMVDEStartseiteDocument
        {
            get
            {
                if ((this.mUIRMVDEStartseiteDocument == null))
                {
                    this.mUIRMVDEStartseiteDocument = new UIRMVDEStartseiteDocument(this);
                }
                return this.mUIRMVDEStartseiteDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIRMVDEStartseiteDocument mUIRMVDEStartseiteDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIRMVDEStartseiteDocument : HtmlDocument
    {
        
        public UIRMVDEStartseiteDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "home";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "RMV.DE - Startseite";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://www.rmv.de/";
            this.WindowTitles.Add("RMV.DE - Startseite");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEMailNutzernameEdit
        {
            get
            {
                if ((this.mUIEMailNutzernameEdit == null))
                {
                    this.mUIEMailNutzernameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEMailNutzernameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "myname";
                    this.mUIEMailNutzernameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "user";
                    this.mUIEMailNutzernameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "E-Mail/Nutzername";
                    this.mUIEMailNutzernameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEMailNutzernameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEMailNutzernameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIEMailNutzernameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=myname value=E-Mail/Nutzername name=u";
                    this.mUIEMailNutzernameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "18";
                    this.mUIEMailNutzernameEdit.WindowTitles.Add("RMV.DE - Startseite");
                    #endregion
                }
                return this.mUIEMailNutzernameEdit;
            }
        }
        
        public HtmlEdit UIPasswortEdit
        {
            get
            {
                if ((this.mUIPasswortEdit == null))
                {
                    this.mUIPasswortEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswortEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "mypw";
                    this.mUIPasswortEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "password";
                    this.mUIPasswortEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Passwort";
                    this.mUIPasswortEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswortEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswortEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIPasswortEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=mypw value=\"\" type=password name=pass";
                    this.mUIPasswortEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "19";
                    this.mUIPasswortEdit.WindowTitles.Add("RMV.DE - Startseite");
                    #endregion
                }
                return this.mUIPasswortEdit;
            }
        }
        
        public UIMyrmvloginPane UIMyrmvloginPane
        {
            get
            {
                if ((this.mUIMyrmvloginPane == null))
                {
                    this.mUIMyrmvloginPane = new UIMyrmvloginPane(this);
                }
                return this.mUIMyrmvloginPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEMailNutzernameEdit;
        
        private HtmlEdit mUIPasswortEdit;
        
        private UIMyrmvloginPane mUIMyrmvloginPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIMyrmvloginPane : HtmlDiv
    {
        
        public UIMyrmvloginPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "myrmvlogin";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "meinRMV\r\nFahrkarten online und mobil erw";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "myrmv box-mod";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=myrmvlogin class=\"myrmv box-mod\" sizcache=\"11\" sizset=\"24\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "39";
            this.WindowTitles.Add("RMV.DE - Startseite");
            #endregion
        }
        
        #region Properties
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Login";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "type=submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUILoginButton.WindowTitles.Add("RMV.DE - Startseite");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIRMVDESucheWindowsIntWindow : BrowserWindow
    {
        
        public UIRMVDESucheWindowsIntWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "RMV.DE - Suche";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("RMV.DE - Suche");
            this.WindowTitles.Add("RMV.DE - Startseite");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIRMVDESucheDocument UIRMVDESucheDocument
        {
            get
            {
                if ((this.mUIRMVDESucheDocument == null))
                {
                    this.mUIRMVDESucheDocument = new UIRMVDESucheDocument(this);
                }
                return this.mUIRMVDESucheDocument;
            }
        }
        
        public UIRMVDESucheDocument1 UIRMVDESucheDocument1
        {
            get
            {
                if ((this.mUIRMVDESucheDocument1 == null))
                {
                    this.mUIRMVDESucheDocument1 = new UIRMVDESucheDocument1(this);
                }
                return this.mUIRMVDESucheDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIRMVDESucheDocument mUIRMVDESucheDocument;
        
        private UIRMVDESucheDocument1 mUIRMVDESucheDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIRMVDESucheDocument : HtmlDocument
    {
        
        public UIRMVDESucheDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "RMV.DE - Suche";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/de/Verschiedenes/Suchen_und_finden/592/Suche.html;jsessionid=5892669C537AF51408F" +
                "A604B16D510CF";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://www.rmv.de/de/Verschiedenes/Suchen_und_finden/592/Suche.html;jsessionid=58" +
                "92669C537AF51408FA604B16D510CF?q=Berlin";
            this.WindowTitles.Add("RMV.DE - Suche");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UISuchenachEdit
        {
            get
            {
                if ((this.mUISuchenachEdit == null))
                {
                    this.mUISuchenachEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUISuchenachEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "searchbar";
                    this.mUISuchenachEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "q";
                    this.mUISuchenachEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Suche nach";
                    this.mUISuchenachEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISuchenachEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISuchenachEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "static";
                    this.mUISuchenachEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=searchbar class=static name=q  jQuery";
                    this.mUISuchenachEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUISuchenachEdit.WindowTitles.Add("RMV.DE - Suche");
                    #endregion
                }
                return this.mUISuchenachEdit;
            }
        }
        
        public UIHeaderPane UIHeaderPane
        {
            get
            {
                if ((this.mUIHeaderPane == null))
                {
                    this.mUIHeaderPane = new UIHeaderPane(this);
                }
                return this.mUIHeaderPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUISuchenachEdit;
        
        private UIHeaderPane mUIHeaderPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIHeaderPane : HtmlDiv
    {
        
        public UIHeaderPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "header";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "SucheSuche nach \r\nSuchen\r\n DE Deutsch ES";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=header sizcache=\"11\" sizset=\"0\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "13";
            this.WindowTitles.Add("RMV.DE - Suche");
            #endregion
        }
        
        #region Properties
        public HtmlButton UISuchenButton
        {
            get
            {
                if ((this.mUISuchenButton == null))
                {
                    this.mUISuchenButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUISuchenButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISuchenButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISuchenButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Suchen";
                    this.mUISuchenButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISuchenButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISuchenButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUISuchenButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "type=submit";
                    this.mUISuchenButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUISuchenButton.WindowTitles.Add("RMV.DE - Suche");
                    #endregion
                }
                return this.mUISuchenButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUISuchenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIRMVDESucheDocument1 : HtmlDocument
    {
        
        public UIRMVDESucheDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "RMV.DE - Suche";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/de/Verschiedenes/Suchen_und_finden/592/Suche.html";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://www.rmv.de/de/Verschiedenes/Suchen_und_finden/592/Suche.html?q=Berlin";
            this.WindowTitles.Add("RMV.DE - Suche");
            #endregion
        }
        
        #region Properties
        public UISearchPane UISearchPane
        {
            get
            {
                if ((this.mUISearchPane == null))
                {
                    this.mUISearchPane = new UISearchPane(this);
                }
                return this.mUISearchPane;
            }
        }
        
        public UIMyrmvPane UIMyrmvPane
        {
            get
            {
                if ((this.mUIMyrmvPane == null))
                {
                    this.mUIMyrmvPane = new UIMyrmvPane(this);
                }
                return this.mUIMyrmvPane;
            }
        }
        #endregion
        
        #region Fields
        private UISearchPane mUISearchPane;
        
        private UIMyrmvPane mUIMyrmvPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UISearchPane : HtmlDiv
    {
        
        public UISearchPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "search";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Ihr Suchbegriff \r\nSuchen\r\n  \r\n14 Treffer";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=search sizcache=\"14\" sizset=\"23\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "95";
            this.WindowTitles.Add("RMV.DE - Suche");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "H2";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = null;
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("RMV.DE - Suche");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIMyrmvPane : HtmlDiv
    {
        
        public UIMyrmvPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "myrmv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "LogoutNagappan KrishnanHandyTicket-Käufe";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "myrmv logged-1 box-mod";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=myrmv class=\"myrmv logged-1 box-mod\" sizcache=\"15\" sizset=\"1\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "45";
            this.WindowTitles.Add("RMV.DE - Suche");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UILogoutHyperlink
        {
            get
            {
                if ((this.mUILogoutHyperlink == null))
                {
                    this.mUILogoutHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUILogoutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUILogoutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILogoutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILogoutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Logout";
                    this.mUILogoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/auth/logout.html";
                    this.mUILogoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILogoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://www.rmv.de/auth/logout.html?lang=de";
                    this.mUILogoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILogoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"https://www.rmv.de/auth/logout.htm";
                    this.mUILogoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUILogoutHyperlink.WindowTitles.Add("RMV.DE - Suche");
                    #endregion
                }
                return this.mUILogoutHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUILogoutHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIRMVDESucheWindowsIntWindow1 : BrowserWindow
    {
        
        public UIRMVDESucheWindowsIntWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "RMV.DE - Suche";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("RMV.DE - Suche");
            this.WindowTitles.Add("RMV.DE - Startseite");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIRMVDEStartseiteWindoTitleBar UIRMVDEStartseiteWindoTitleBar
        {
            get
            {
                if ((this.mUIRMVDEStartseiteWindoTitleBar == null))
                {
                    this.mUIRMVDEStartseiteWindoTitleBar = new UIRMVDEStartseiteWindoTitleBar(this);
                }
                return this.mUIRMVDEStartseiteWindoTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIRMVDEStartseiteWindoTitleBar mUIRMVDEStartseiteWindoTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIRMVDEStartseiteWindoTitleBar : WinTitleBar
    {
        
        public UIRMVDEStartseiteWindoTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("RMV.DE - Startseite");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("RMV.DE - Startseite");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIRMVDEmeinRMVWindowsIWindow : BrowserWindow
    {
        
        public UIRMVDEmeinRMVWindowsIWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "RMV.DE - meinRMV";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("RMV.DE - meinRMV");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIRMVDEmeinRMVDocument UIRMVDEmeinRMVDocument
        {
            get
            {
                if ((this.mUIRMVDEmeinRMVDocument == null))
                {
                    this.mUIRMVDEmeinRMVDocument = new UIRMVDEmeinRMVDocument(this);
                }
                return this.mUIRMVDEmeinRMVDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIRMVDEmeinRMVDocument mUIRMVDEmeinRMVDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIRMVDEmeinRMVDocument : HtmlDocument
    {
        
        public UIRMVDEmeinRMVDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "RMV.DE - meinRMV";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/de/meinRMV";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://www.rmv.de/de/meinRMV";
            this.WindowTitles.Add("RMV.DE - meinRMV");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UISuchenachEdit
        {
            get
            {
                if ((this.mUISuchenachEdit == null))
                {
                    this.mUISuchenachEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUISuchenachEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "searchbar";
                    this.mUISuchenachEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "q";
                    this.mUISuchenachEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Suche nach";
                    this.mUISuchenachEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISuchenachEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISuchenachEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "static";
                    this.mUISuchenachEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=searchbar class=static name=q";
                    this.mUISuchenachEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUISuchenachEdit.WindowTitles.Add("RMV.DE - meinRMV");
                    #endregion
                }
                return this.mUISuchenachEdit;
            }
        }
        
        public UIHeaderPane1 UIHeaderPane
        {
            get
            {
                if ((this.mUIHeaderPane == null))
                {
                    this.mUIHeaderPane = new UIHeaderPane1(this);
                }
                return this.mUIHeaderPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUISuchenachEdit;
        
        private UIHeaderPane1 mUIHeaderPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIHeaderPane1 : HtmlDiv
    {
        
        public UIHeaderPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "header";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "SucheSuche nach \r\nSuchen\r\n DE Deutsch ES";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=header sizcache=\"11\" sizset=\"0\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "13";
            this.WindowTitles.Add("RMV.DE - meinRMV");
            #endregion
        }
        
        #region Properties
        public HtmlButton UISuchenButton
        {
            get
            {
                if ((this.mUISuchenButton == null))
                {
                    this.mUISuchenButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUISuchenButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISuchenButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISuchenButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Suchen";
                    this.mUISuchenButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISuchenButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISuchenButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUISuchenButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "type=submit";
                    this.mUISuchenButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUISuchenButton.WindowTitles.Add("RMV.DE - meinRMV");
                    #endregion
                }
                return this.mUISuchenButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUISuchenButton;
        #endregion
    }
}
